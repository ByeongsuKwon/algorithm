// this subject is very interesting ...
#include <stdio.h>
#include <math.h>
#include <string.h>
//#include <unistd.h>

float absd(float a){ if (a<0) return -a; return a;}

void convtE(float b_to_f){ // E 로 양식 변환 출력
		int cnt=0;
		if (b_to_f>=1e-6 ) { // if b_to_f smaller than 10^-6....
			while(absd(b_to_f)>=10 || absd(b_to_f)<1) {
//				printf("%lf\n", b_to_f);
//				sleep(1);
				if ( absd(b_to_f)<1 ) b_to_f*=10, cnt--;
				else b_to_f/=10, cnt++;
			}
		}
		if(cnt) printf("%fE%d\n",b_to_f, cnt);
		else printf("%f\n", b_to_f);
}

void ftb(){ // make binary number to float number xxxx xxxx xxxx... input type
		char bin[8][5]; //store binary num
		for (int i=0; i<8; i++) scanf("%s",bin[i]);

		int sign = bin[0][0]=='1'?-1:1;
		int X = (1<<9)-1; //IEEE 754  says... 127...

		int Exp=0;

		for (int i=0; i<2; i++){
			for (int j=0; j<4; j++){
				if (i==0 && j==0) continue; //because b[0][0] store sign
				Exp *= 2;
				Exp += (bin[i][j]-'0');
			}
		}
		Exp *= 2; 
		Exp += (bin[2][0]-'0'); //because bin[2][0] is 9th bit from front. it is Expbit.

		//and then we calculate fraction bits... to get mantessa
		float Mant = 0;
		for (int i=2; i<8; i++){
			for (int j=0; j<4; j++){
				if (i==2 && j==0) continue; 
				float tmp=bin[i][j]-'0';			//if we have bits in fractions part...
				if(tmp) tmp = pow(2, -(i-2)*4-j); //it has 2^(-pos) value...
				Mant+=tmp;                       //then add to mantessa part
			}
		}

		// (-1)^s + (1+Mant)*2^e 
		float b_to_f= sign*(1+Mant)*pow(2 ,Exp-127);
		printf("%d * (1+%f) * 2^(%d):\n", sign, Mant, Exp-127);
		convtE(b_to_f);  //print with E
}

void btf(){ //make float number to binary number ....
	char s[16]; scanf("%s", s); // your input should be less than 15 length string
	int n = strlen(s);

	int chk=-1;
	for (int i=0; i<n; i++) {
		if (s[i] == 'E') chk=i; // if we have scientific notation
	}

	int num=0, coef=0;
	int sign=1, coefsign=1; //sign for num.
	if (chk != -1){ // if we have E notation
		if(s[0] =='-') sign=-1;
		if(s[i+1] == '-') coefsign=-1;

		for (int i=(coefsign==1?chk+1:chk+2); i<n; i++){ // chk coef number. 
			coef*= 10;
			coef+= (s[i]-'0');
		}

		for (int i=(sign==1?0:1); i<chk; i++){
			num *= 10;
			num += (s[i]-'0');
		}

		int exp =0;
		char nums[24], cnt=23;
		while(num && cnt>=0 ){
			nums[cnt--]=num%2;
		}




	}
	else {





	}

}
int main(){
	printf("input [d,i] : ");
	char type[3];
	scanf("%s", type);

	if (type[0]=='i'){ //we are going to make float num from binary
		ftb();
	}
	else btf();
}
